package Internet;

import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;
import java.util.ArrayList;
import javax.swing.*;

// Maxx & Lea 1/12-2017
public class ChatParticipant implements ActionListener, ObjectStreamListener {
    private Socket socket;
    private OutputStream outputStream;
    private ObjectOutputStream out;
    private InputStream inputStream;
    private ObjectInputStream in;
    private JFrame frame;
    private JTextArea textArea;
    private JTextField textField;
    //String name;
    private JButton send;
    private JButton logOff;
    private ReadWriter readWriter;
    private ArrayList<Contact> contactArray;
    
    ChatParticipant(Socket theSocket) throws IOException{
        //name = this.toString();
        socket = theSocket;
        try{
            readWriter = new ReadWriter("C:\\Users\\maxxw\\OneDrive\\Dokument\\NetBeansProjects\\theText.txt");
            createTextStreams(socket);
            //contactArray = readWriter.loadContact();
            createWindow();
        }
        catch(IOException e){
            e.getMessage();
        }
    }
    
        public void createTextStreams(Socket socket) throws IOException{
            outputStream = socket.getOutputStream();
            out = new ObjectOutputStream(outputStream);
            inputStream = socket.getInputStream();
            in = new ObjectInputStream(inputStream);
            ObjectStreamManager manager = new ObjectStreamManager(1, in, this);
        }
        @Override
        public void objectReceived(int number, Object object, Exception exception) {
            String message = (String) object;
            String codeWord = "iHaveLoggedOut";
            if(message == null){}
            if(message != null && message.equals(codeWord)){
                createDialog();
            }  
            else if(message != null){
                textArea.append("Golf says:\n" + message + "\n");
            }
        }
        
        public void createWindow(){
            frame = new JFrame();
            frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); //EXIT_ON_CLOSE
            frame.setPreferredSize(new Dimension(600,400));

            JPanel primary = new JPanel();
            primary.setLayout(new BorderLayout());
            
            JPanel buttonPanel = new JPanel();
            buttonPanel.setPreferredSize(new Dimension(200,400));
            buttonPanel.setLayout(new BorderLayout());
            send = new JButton("send");
            send.addActionListener(this);
            logOff = new JButton("log-off");
            logOff.addActionListener(this);
            buttonPanel.add(send, BorderLayout.SOUTH);
            buttonPanel.add(logOff,BorderLayout.NORTH);
            
            JPanel chatPanel = new JPanel();
            textArea = new JTextArea(5,20);
            textArea.setEditable(false);
            JScrollPane scrollPane = new JScrollPane(textArea);
            scrollPane.setPreferredSize(new Dimension(5,20));
            textField = new JTextField(20);
            chatPanel.setLayout(new BorderLayout());
            chatPanel.add(textField, BorderLayout.SOUTH);
            chatPanel.add(scrollPane, BorderLayout.CENTER);
            
            primary.add(chatPanel, BorderLayout.CENTER);
            primary.add(buttonPanel, BorderLayout.EAST);
            frame.add(primary);
            frame.pack();
            frame.setVisible(true);
        }
        @Override
        public void actionPerformed(ActionEvent e) {
            if(e.getSource() == send){
                String text = textField.getText();
                textArea.append("Rolf says:\n" +text + "\n");
                try {
                    out.writeObject(text);
                } 
                catch (IOException ex) {
                    ex.getMessage();
                }
                    textField.setText("");
            }
            if(e.getSource() == logOff){
                try {
                    out.writeObject("iHaveLoggedOut");
                    closeStreamsAndSockets();
                    frame.dispose();
                } 
                catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
            }
        }
        
        
        public void closeStreamsAndSockets() throws IOException{
            outputStream.close();
            socket.close();
            //l√§gg till socket
        }
        
        public void createDialog(){
            JDialog theBox = new JDialog(frame, "Other part left!!!!!", false);
            theBox.setSize(new Dimension(20,20));
            JButton close = new JButton("Close chat.");
            close.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae) {
                    theBox.dispose();
                    frame.dispose();
                }
                 });
            theBox.getContentPane().add(close, BorderLayout.SOUTH);
            try{
                closeStreamsAndSockets();
            }
            catch(IOException e){
                System.out.println(e.getMessage());
            }
            theBox.pack();
            theBox.setVisible(true);
            theBox.getDefaultCloseOperation();  
        }
}
